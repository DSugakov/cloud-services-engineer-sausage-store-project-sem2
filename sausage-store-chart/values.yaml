global:
  imagePullPolicy: Always
  ###vault:
  ###  host: ip
  ###  name: vault
  ###  vaultToken: someToken


frontend:
### В чарте frontend отсутствуют некоторые важные файлы. Поймите какие и опишите их.
  replicas: 1
  revisionHistoryLimit: 15
  strategy:
    type: Recreate
  service:
    port: 80
  ingress:
    host: front-dsugakov.2sem.students-projects.ru
    path: /
    pathType: Prefix
  containerPort: 80
  image: dsugakov/sausage-frontend:latest
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "128Mi"
      cpu: "1"
  nginxConf: nginx.conf

backend:
  annotations:
    path: /actuator/prometheus
    port: "8080"
    scrape: "true"
  env:
    postgresUri: jdbc:postgresql://postgres:5432/sausage-store
    postgresUser: store
    postgresPassword: storepassword
    reportPath: /logs/reports
    logPath: /logs
  service:
    port: 8080
  revisionHistoryLimit: 15
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  image: dsugakov/sausage-backend:latest
  imagePullPolicy: Always
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "1"
  containerPort: 8080
  livenessProbe:
    httpGet:
      path: /actuator/health
      port: 8080
    initialDelaySeconds: 20
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
  vpa:
    updatePolicy:
      updateMode: "Off"
    resourcePolicy:
      containerPolicies:
        - containerName: "*"
          controlledResources:
            - cpu
            - memory
          minAllowed:
            cpu: "50m"
            memory: "128Mi"
          maxAllowed:
            cpu: "500m"
            memory: "256Mi"

backend-report:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  image: dsugakov/sausage-backend-report:latest
  containerPort: 8080
  service:
    port: 8080
  resources:
    requests:
      cpu: "50m"
      memory: "64Mi"
    limits:
      cpu: "500m"
      memory: "256Mi"
  env:
    port: "8080"
    db: mongodb://reports:reportspassword@mongodb:27017/sausage-store?authSource=sausage-store
  hpa:
    minReplicas: 1
    maxReplicas: 3
    cpuAverageUtilization: 50

infra:
  postgresql:
    database: sausage-store
    username: store
    password: storepassword
    storage: 2Gi
  mongodb:
    env:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    containerPort: 27017
